from typing import Literal

from ..util import KWDict

"""
This type stub file was generated by pyright.
"""

type VersionMessage = tuple[
    Literal[1],
    int,
]
type DirectoryMessage = tuple[
    Literal[2],
    KWDict,
]
type URLMessage = tuple[
    Literal[3],
    str,
    KWDict,
]
type QueueMessage = tuple[
    Literal[6],
    str,
    KWDict,
]

type MessageType = VersionMessage | DirectoryMessage | URLMessage | QueueMessage

class Message:
    """Enum for message identifiers

    Extractors yield their results as message-tuples, where the first element
    is one of the following identifiers. This message-identifier determines
    the type and meaning of the other elements in such a tuple.

    - Message.Version:
      - Message protocol version (currently always '1')
      - 2nd element specifies the version of all following messages as integer

    - Message.Directory:
      - Sets the target directory for all following images
      - 2nd element is a dictionary containing general metadata

    - Message.Url:
      - Image URL and its metadata
      - 2nd element is the URL as a string
      - 3rd element is a dictionary with image-specific metadata

    - Message.Headers:  # obsolete
      - HTTP headers to use while downloading
      - 2nd element is a dictionary with header-name and -value pairs

    - Message.Cookies:  # obsolete
      - Cookies to use while downloading
      - 2nd element is a dictionary with cookie-name and -value pairs

    - Message.Queue:
      - (External) URL that should be handled by another extractor
      - 2nd element is the (external) URL as a string
      - 3rd element is a dictionary containing URL-specific metadata

    - Message.Urllist:  # obsolete
      - Same as Message.Url, but its 2nd element is a list of multiple URLs
      - The additional URLs serve as a fallback if the primary one fails
    """

    Version: Literal[1] = ...
    Directory: Literal[2] = ...
    Url: Literal[3] = ...
    Queue: Literal[6] = ...
