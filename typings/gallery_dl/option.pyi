"""
This type stub file was generated by pyright.
"""

import argparse

"""Command line option parsing"""

class ConfigAction(argparse.Action):
    """Set argparse results as config values"""
    def __call__(self, parser, namespace, values, option_string=...):  # -> None:
        ...

class ConfigConstAction(argparse.Action):
    """Set argparse const values as config values"""
    def __call__(self, parser, namespace, values, option_string=...):  # -> None:
        ...

class AppendCommandAction(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=...):  # -> None:
        ...

class DeprecatedConfigConstAction(argparse.Action):
    """Set argparse const values as config values + deprecation warning"""
    def __call__(self, parser, namespace, values, option_string=...):  # -> None:
        ...

class ConfigParseAction(argparse.Action):
    """Parse KEY=VALUE config options"""
    def __call__(self, parser, namespace, values, option_string=...):  # -> None:
        ...

class PPParseAction(argparse.Action):
    """Parse KEY=VALUE post processor options"""
    def __call__(self, parser, namespace, values, option_string=...):  # -> None:
        ...

class InputfileAction(argparse.Action):
    """Collect input files"""
    def __call__(self, parser, namespace, value, option_string=...):  # -> None:
        ...

class MtimeAction(argparse.Action):
    """Configure mtime post processors"""
    def __call__(self, parser, namespace, value, option_string=...):  # -> None:
        ...

class RenameAction(argparse.Action):
    """Configure rename post processors"""
    def __call__(self, parser, namespace, value, option_string=...):  # -> None:
        ...

class UgoiraAction(argparse.Action):
    """Configure ugoira post processors"""
    def __call__(self, parser, namespace, value, option_string=...):  # -> None:
        ...

class PrintAction(argparse.Action):
    def __call__(self, parser, namespace, value, option_string=...):  # -> None:
        ...

class Formatter(argparse.HelpFormatter):
    """Custom HelpFormatter class to customize help output"""
    def __init__(self, prog) -> None: ...

def build_parser():  # -> ArgumentParser:
    """Build and configure an ArgumentParser object"""
    ...
